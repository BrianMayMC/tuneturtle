name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze with SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=BrianMayMC_BrianMayMC
      run: |
        for dir in song-service playlist-service user-service; do
          cd $dir
          mvn -B verify -Dmongodb.url=mongodb://localhost:27017/ org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=BrianMayMC_BrianMayMC
          cd ..
        done

    - name: Build and Push Docker images
      run: |
        docker build -t song-service ./song-service
        docker build -t playlist-service ./playlist-service
        docker build -t user-service ./user-service

        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

        docker tag song-service ${{ secrets.DOCKER_USERNAME }}/song-service:latest
        docker tag playlist-service ${{ secrets.DOCKER_USERNAME }}/playlist-service:latest
        docker tag user-service ${{ secrets.DOCKER_USERNAME }}/user-service:latest

        docker push ${{ secrets.DOCKER_USERNAME }}/song-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/playlist-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest
  
  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Hub Login
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Start ZAP daemon
      run: |
        docker run -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://172.29.33.72/



  
  deploy:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - uses: actions/checkout@v2
      - name: Azure CLI Login
        run: az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group tuneturtle-aks_group --name tuneturtle
      - name: Apply files 
        run: kubectl apply -f ./kubernetes